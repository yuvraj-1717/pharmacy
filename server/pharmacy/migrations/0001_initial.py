# Generated by Django 5.2.3 on 2025-06-11 05:53

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=20, unique=True)),
                ('whatsapp_number', models.CharField(blank=True, max_length=20)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('pincode', models.CharField(blank=True, max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pharmacy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('license_number', models.CharField(max_length=100, unique=True)),
                ('owner_name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=20)),
                ('whatsapp_number', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address_line1', models.CharField(max_length=200)),
                ('address_line2', models.CharField(blank=True, max_length=200)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('pincode', models.CharField(max_length=10)),
                ('opening_time', models.TimeField()),
                ('closing_time', models.TimeField()),
                ('is_24x7', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Pharmacies',
            },
        ),
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('generic_name', models.CharField(blank=True, max_length=200)),
                ('brand_name', models.CharField(blank=True, max_length=200)),
                ('composition', models.TextField(help_text='Active ingredients')),
                ('strength', models.CharField(help_text='e.g., 500mg, 10mg/ml', max_length=100)),
                ('form', models.CharField(choices=[('TAB', 'Tablet'), ('CAP', 'Capsule'), ('SYR', 'Syrup'), ('INJ', 'Injection'), ('CRE', 'Cream'), ('OIN', 'Ointment'), ('DRP', 'Drops'), ('SPR', 'Spray'), ('INH', 'Inhaler'), ('SUP', 'Suppository')], max_length=3)),
                ('pack_size', models.CharField(help_text='e.g., 10 tablets, 100ml', max_length=50)),
                ('prescription_type', models.CharField(choices=[('OTC', 'Over the Counter'), ('RX', 'Prescription Required'), ('RXC', 'Prescription Required - Controlled')], default='OTC', max_length=3)),
                ('indication', models.TextField(help_text="What it's used for")),
                ('dosage', models.TextField(help_text='How to use')),
                ('side_effects', models.TextField(blank=True)),
                ('contraindications', models.TextField(blank=True)),
                ('mrp', models.DecimalField(decimal_places=2, help_text='Maximum Retail Price', max_digits=10)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_active', models.BooleanField(default=True)),
                ('is_in_stock', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pharmacy.category')),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pharmacy.manufacturer')),
            ],
        ),
        migrations.CreateModel(
            name='MedicineAlias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=200)),
                ('medicine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aliases', to='pharmacy.medicine')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('PREPARING', 'Preparing'), ('READY', 'Ready for Pickup'), ('DELIVERED', 'Delivered'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=10)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('delivery_charge', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('prescription_required', models.BooleanField(default=False)),
                ('prescription_uploaded', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('delivery_address', models.TextField(blank=True)),
                ('delivery_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pharmacy.customer')),
                ('pharmacy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pharmacy.pharmacy')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('medicine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pharmacy.medicine')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='pharmacy.order')),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='preferred_pharmacy',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pharmacy.pharmacy'),
        ),
        migrations.CreateModel(
            name='PharmacyInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_quantity', models.PositiveIntegerField(default=0)),
                ('reorder_level', models.PositiveIntegerField(default=10)),
                ('batch_number', models.CharField(blank=True, max_length=50)),
                ('expiry_date', models.DateField()),
                ('cost_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('selling_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('medicine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pharmacy.medicine')),
                ('pharmacy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pharmacy.pharmacy')),
            ],
        ),
        migrations.CreateModel(
            name='WhatsAppSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=20)),
                ('session_id', models.CharField(max_length=100)),
                ('current_step', models.CharField(default='start', max_length=50)),
                ('context_data', models.JSONField(default=dict)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'unique_together': {('phone_number', 'session_id')},
            },
        ),
        migrations.AddIndex(
            model_name='medicine',
            index=models.Index(fields=['name'], name='pharmacy_me_name_aa3c4f_idx'),
        ),
        migrations.AddIndex(
            model_name='medicine',
            index=models.Index(fields=['generic_name'], name='pharmacy_me_generic_ce9e34_idx'),
        ),
        migrations.AddIndex(
            model_name='medicine',
            index=models.Index(fields=['category'], name='pharmacy_me_categor_2a0502_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='medicine',
            unique_together={('name', 'strength', 'manufacturer')},
        ),
        migrations.AlterUniqueTogether(
            name='medicinealias',
            unique_together={('medicine', 'alias')},
        ),
        migrations.AlterUniqueTogether(
            name='pharmacyinventory',
            unique_together={('pharmacy', 'medicine', 'batch_number')},
        ),
    ]
